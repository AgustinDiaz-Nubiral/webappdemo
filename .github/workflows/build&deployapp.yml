name: Build and Deploy Docker Image

on:
  push:
    branches: [ "main" ]
    paths:
     - 'src/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    defaults:
       run:
        working-directory: ./src
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: |
        echo ${{ secrets.ACR_NAME }}.azurecr.io \
        && az acr login --name ${{ secrets.ACR_NAME }}
    
    - name: Get ACR Access Token
      id: get-token
      run: |
        TOKEN=$(az acr login --name ${{ secrets.ACR_NAME }} --expose-token --output tsv --query accessToken)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
        
    - name: Use ACR Token
      run: |
          echo "Using the ACR token: $TOKEN"
          docker login ${{ secrets.ACR_NAME }}.azurecr.io -u 00000000-0000-0000-0000-000000000000 -p $TOKEN
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
          
    - name: Build and Push Docker image
      run: |
        docker buildx build --platform linux/amd64 --push \
          -t ${{ secrets.ACR_NAME }}.azurecr.io/webapp:${{ github.sha }} \
          -t ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest \
          -f docker/Dockerfile \
          src
          
    - name: Azure Container Registry Logout
      run: |
        docker logout ${{ secrets.ACR_NAME }}.azurecr.io

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME }}
        images: ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest

